[{"D:\\PowerGate\\Validate-useform\\src\\index.tsx":"1","D:\\PowerGate\\Validate-useform\\src\\reportWebVitals.ts":"2","D:\\PowerGate\\Validate-useform\\src\\redux\\configureStore.ts":"3","D:\\PowerGate\\Validate-useform\\src\\App.tsx":"4","D:\\PowerGate\\Validate-useform\\src\\modules\\intl\\redux\\intlReducer.ts":"5","D:\\PowerGate\\Validate-useform\\src\\modules\\intl\\component\\ConnectedIntlProvider.tsx":"6","D:\\PowerGate\\Validate-useform\\src\\redux\\reducer.ts":"7","D:\\PowerGate\\Validate-useform\\src\\redux\\sagas.ts":"8","D:\\PowerGate\\Validate-useform\\src\\utils\\constants.ts":"9","D:\\PowerGate\\Validate-useform\\src\\utils\\httpResponseCode.ts":"10","D:\\PowerGate\\Validate-useform\\src\\configs\\api.ts":"11","D:\\PowerGate\\Validate-useform\\src\\modules\\intl\\constants.ts":"12","D:\\PowerGate\\Validate-useform\\src\\Routes.tsx":"13","D:\\PowerGate\\Validate-useform\\src\\modules\\common\\redux\\thunk.ts":"14","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\redux\\authReducer.ts":"15","D:\\PowerGate\\Validate-useform\\src\\configs\\routes.ts":"16","D:\\PowerGate\\Validate-useform\\src\\modules\\common\\components\\ProtectedRoute.tsx":"17","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\pages\\LoginPage.tsx":"18","D:\\PowerGate\\Validate-useform\\src\\modules\\home\\pages\\HomePage.tsx":"19","D:\\PowerGate\\Validate-useform\\src\\modules\\home\\pages\\ContactPage.tsx":"20","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\components\\LoginFormV2.tsx":"21","D:\\PowerGate\\Validate-useform\\src\\utils\\index.ts":"22","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\components\\SingupForm.tsx":"23","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\components\\LoginForm.tsx":"24","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\utils.ts":"25","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\pages\\SingupPage.tsx":"26"},{"size":1305,"mtime":1681437024000,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1681437024000,"results":"29","hashOfConfig":"28"},{"size":1325,"mtime":1681437024000,"results":"30","hashOfConfig":"28"},{"size":1412,"mtime":1681814926232,"results":"31","hashOfConfig":"28"},{"size":773,"mtime":1681807982485,"results":"32","hashOfConfig":"28"},{"size":794,"mtime":1681807026453,"results":"33","hashOfConfig":"28"},{"size":575,"mtime":1681437024000,"results":"34","hashOfConfig":"28"},{"size":143,"mtime":1681437024000,"results":"35","hashOfConfig":"28"},{"size":212,"mtime":1681438176000,"results":"36","hashOfConfig":"28"},{"size":93,"mtime":1681437024000,"results":"37","hashOfConfig":"28"},{"size":783,"mtime":1681729918035,"results":"38","hashOfConfig":"28"},{"size":230,"mtime":1681741587861,"results":"39","hashOfConfig":"28"},{"size":1044,"mtime":1681733876977,"results":"40","hashOfConfig":"28"},{"size":1192,"mtime":1681438176000,"results":"41","hashOfConfig":"28"},{"size":807,"mtime":1681438176000,"results":"42","hashOfConfig":"28"},{"size":108,"mtime":1681707470678,"results":"43","hashOfConfig":"28"},{"size":570,"mtime":1681437024000,"results":"44","hashOfConfig":"28"},{"size":3913,"mtime":1681809336509,"results":"45","hashOfConfig":"28"},{"size":144,"mtime":1681437024000,"results":"46","hashOfConfig":"28"},{"size":153,"mtime":1681437024000,"results":"47","hashOfConfig":"28"},{"size":5957,"mtime":1681808924895,"results":"48","hashOfConfig":"28"},{"size":551,"mtime":1681565380445,"results":"49","hashOfConfig":"28"},{"size":15781,"mtime":1681814696487,"results":"50","hashOfConfig":"28"},{"size":3456,"mtime":1681564426269,"results":"51","hashOfConfig":"28"},{"size":770,"mtime":1681437024000,"results":"52","hashOfConfig":"28"},{"size":4237,"mtime":1681814793879,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1kvtffa",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\PowerGate\\Validate-useform\\src\\index.tsx",[],["114","115"],"D:\\PowerGate\\Validate-useform\\src\\reportWebVitals.ts",[],"D:\\PowerGate\\Validate-useform\\src\\redux\\configureStore.ts",[],"D:\\PowerGate\\Validate-useform\\src\\App.tsx",["116"],"D:\\PowerGate\\Validate-useform\\src\\modules\\intl\\redux\\intlReducer.ts",["117"],"import { ActionType, createCustomAction, getType } from 'typesafe-actions';\nimport { LS_LANG } from '../constants';\n\nexport interface IntlState {\n  readonly locale: string;\n}\n  const language =  localStorage.getItem(LS_LANG);\n\nexport const setLocale = (locale: string) => {\n  localStorage.setItem(LS_LANG, locale);\n  return setLocaleAction(locale);\n};\n\nexport const setLocaleAction = createCustomAction('setLocale', (locale: string) => ({\n  locale,\n}));\n\nconst actions = { setLocale };\n\ntype Action = ActionType<typeof actions>;\n\nexport default function reducer(\n  state: IntlState = { locale: 'vi' },\n  action: Action,\n) {\n  switch (action.type) {\n    case getType(setLocaleAction):\n      return { ...state, locale: action.locale };\n    default:\n      return state;\n  }\n}\n","D:\\PowerGate\\Validate-useform\\src\\modules\\intl\\component\\ConnectedIntlProvider.tsx",["118","119"],"import { IntlProvider } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../../redux/reducer';\nimport enMessages from '../en.json';\nimport viMessages from '../vi.json';\nimport intlReducer, { IntlState } from '../../../modules/intl/redux/intlReducer';\n\n\nfunction getMessages(locale: string): any {\n  console.log(locale)\n  if (typeof locale === 'string' && locale.startsWith('vi')) {\n    console.log(\"vi\")\n\n    return viMessages;\n  }\n  return enMessages;\n}\n// getMessages(\"\")\n\nfunction mapStateToProps(state : AppState) {\n  console.log(state);\n  return {\n    locale: state.intl.locale,\n    messages: getMessages(state.intl.locale),\n  };\n}\n\n// mapStateToProps( )\n\n\nexport {getMessages, mapStateToProps}\n\nexport default connect(mapStateToProps)(IntlProvider);\n","D:\\PowerGate\\Validate-useform\\src\\redux\\reducer.ts",[],"D:\\PowerGate\\Validate-useform\\src\\redux\\sagas.ts",["120"],"import { fork } from '@redux-saga/core/effects';\n\nexport default function* rootSaga() {\n  // we need add saga here\n  //yield fork(someSaga);\n}\n","D:\\PowerGate\\Validate-useform\\src\\utils\\constants.ts",[],"D:\\PowerGate\\Validate-useform\\src\\utils\\httpResponseCode.ts",[],"D:\\PowerGate\\Validate-useform\\src\\configs\\api.ts",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\intl\\constants.ts",[],"D:\\PowerGate\\Validate-useform\\src\\Routes.tsx",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\common\\redux\\thunk.ts",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\redux\\authReducer.ts",[],"D:\\PowerGate\\Validate-useform\\src\\configs\\routes.ts",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\common\\components\\ProtectedRoute.tsx",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\pages\\LoginPage.tsx",["121","122","123","124","125","126"],"import React, { useState } from 'react';\nimport LoginFormV2 from '../components/LoginFormV2';\nimport LoginForm from '../components/LoginForm';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport logo from '../../../logo-420-x-108.png';\nimport { ILoginParams } from '../../../models/auth';\nimport { useDispatch } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AppState } from '../../../redux/reducer';\nimport { Action } from 'redux';\nimport { fetchThunk } from '../../common/redux/thunk';\nimport { API_PATHS } from '../../../configs/api';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\nimport { setUserInfo } from '../redux/authReducer';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\nimport { ROUTES } from '../../../configs/routes';\nimport { replace } from 'connected-react-router';\nimport { getErrorMessageResponse } from '../../../utils';\nimport { mapStateToProps, getMessages } from \"../../intl/component/ConnectedIntlProvider\";\n// import { connectRouter, RouterState } from 'connected-react-router';\n// import authReducer, { AuthState } from '../../../modules/auth/redux/authReducer';\n// import intlReducer, { IntlState } from '../../../modules/intl/redux/intlReducer;\nimport { connect } from 'react-redux';\nimport { IntlProvider } from 'react-intl';\nimport { setLocale } from \"../../intl/redux/intlReducer\"\n\nconst LoginPage = () => {\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  function toastMessage(json: string) {\n    if (json.trim() === \"OK\") {\n      // console.log(json)\n      toast.success(\"Login sucess!\", {\n        duration: 2000,\n      })\n\n    } else {\n      toast.error(json, {\n        duration: 2000,\n      })\n    }\n\n  }\n  const onLogin = React.useCallback(\n    async (values: ILoginParams) => {\n      setErrorMessage('');\n      setLoading(true);\n\n      const json = await dispatch(\n        fetchThunk(API_PATHS.signIn, 'post', { email: values.email, password: values.password }),\n      );\n\n      setLoading(false);\n\n      if (json?.code === RESPONSE_STATUS_SUCCESS) {\n        dispatch(setUserInfo(json.data));\n        toastMessage(json.message)\n        Cookies.set(ACCESS_TOKEN_KEY, json.data.token, { expires: values.rememberMe ? 7 : undefined });\n        dispatch(replace(ROUTES.home));\n        console.log(json)\n        // setErrorMessage(getErrorMessageResponse(\"Login succes\"));\n\n        return;\n      } else {\n        console.log(json)\n\n        toastMessage(json.message)\n      }\n\n      // setErrorMessage(getErrorMessageResponse(json));\n\n    },\n    [dispatch],\n  );\n\n  return (\n    <div\n      className=\"container\"\n      style={{\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Toaster\n        position=\"top-center\"\n        reverseOrder={false}\n      />\n      <img src={logo} alt=\"\" style={{ maxWidth: '250px', margin: '32px' }} />\n\n      <LoginFormV2 onLogin={onLogin} loading={loading} errorMessage={errorMessage} />\n\n      <div>\n        <p className=\"\"\n          // type=\"submit\"\n          style={{ minWidth: '160px', display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: \"pointer\" }}\n          // onClick={() => mapStateToProps({locale : \"en\"})}\n          onClick={() => setLocale(\"en\")}\n\n        >\n          <span>Tiếng Anh</span>\n        </p>\n\n        <p className=\" mt-3\"\n          style={{ minWidth: '160px', display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: \"pointer\" }}\n          // type=\"submit\"\n          onClick={() => setLocale(\"vi\")}\n\n        >\n            <span>Tiếng Việt</span>\n        </p>\n    </div>\n    </div >\n  );\n};\n\nexport default LoginPage;\n","D:\\PowerGate\\Validate-useform\\src\\modules\\home\\pages\\HomePage.tsx",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\home\\pages\\ContactPage.tsx",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\components\\LoginFormV2.tsx",["127","128","129","130","131","132","133","134","135"],"import React, { useEffect } from 'react';\r\nimport { useForm, Controller, SubmitHandler } from \"react-hook-form\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { ILoginParams, ILoginValidation } from '../../../models/auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    onLogin(values: ILoginParams): void;\r\n    loading: boolean;\r\n    errorMessage: string;\r\n}\r\n\r\n\r\nconst LoginFormV2 = (props: Props) => {\r\n    const { onLogin, loading, errorMessage } = props;\r\n    const [formValues, setFormValues] = React.useState<ILoginParams>({ email: '', password: '', rememberMe: false });\r\n    const { control, handleSubmit } = useForm({\r\n        defaultValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: false\r\n        }\r\n    });\r\n\r\n\r\n\r\n    const onSubmit = React.useCallback(async (data: ILoginParams) => {\r\n        await onLogin(formValues)\r\n\r\n    }, [formValues]);\r\n\r\n    return (<>\r\n        \r\n        <form\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            style={{ maxWidth: '560px', width: '100%' }}\r\n            className=\"row g-3 needs-validation\"\r\n        >\r\n\r\n            <Controller\r\n                name=\"email\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n                rules={{\r\n                    pattern: {\r\n                        value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                        message: \"Value is not email\"\r\n                    },\r\n                    required: \"This email is required.\",\r\n                }}\r\n                render={({ field, fieldState: { error } }) => (\r\n                    <div className=\"col-md-12\">\r\n                        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n                            <FormattedMessage id=\"email\" />\r\n                        </label>\r\n                        <input\r\n                            {...field}\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            className=\"form-control\"\r\n                            id=\"inputEmail\"\r\n                            onChange={(e) => {\r\n                                field.onChange(e);\r\n                                setFormValues({ ...formValues, email: e.target.value })\r\n                            }}\r\n                        />\r\n                        {error && <small className=\"text-danger\">\r\n                            {error.message}\r\n                        </small>}\r\n                    </div>\r\n                )}\r\n            />\r\n\r\n            <Controller\r\n                name=\"password\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n                rules={{\r\n                    minLength: {\r\n                        value: 6,\r\n                        message: \"This input must exceed 6 characters\"\r\n                    },\r\n                    required: \"This password is required.\",\r\n\r\n                }}\r\n                render={({ field, fieldState: { error } }) => (\r\n                    <div className=\"col-md-12\">\r\n                        <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                            <FormattedMessage id=\"password\" />\r\n                        </label>\r\n                        <input {...field}\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"inputPassword\"\r\n                            onChange={(e) => {\r\n                              \r\n                                field.onChange(e);\r\n                                setFormValues({ ...formValues, password: e.target.value })\r\n                            }}\r\n                        />\r\n                        {error && <small className=\"text-danger\">\r\n                            {error?.message}</small>}\r\n                    </div>\r\n                )}\r\n            />\r\n\r\n            <Controller\r\n                name=\"rememberMe\"\r\n                control={control}\r\n\r\n                render={({ field, fieldState: { error } }) => (\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-check\">\r\n                            <input\r\n\r\n                                className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                id=\"invalidCheck\"\r\n\r\n                                onChange={(e) => {\r\n                                    field.onChange(e);\r\n                                    setFormValues({ ...formValues, rememberMe: !!field.value })\r\n                                }}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\r\n                                <FormattedMessage id=\"rememberMe\" />\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            />\r\n\r\n            <div className=\"row justify-content-md-center\" style={{ margin: '16px 0' }}>\r\n                <div className=\"col-md-auto\" style={{ position: \"relative\" }}>\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        style={{ minWidth: '160px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                        disabled={loading}\r\n                        value=\"Đăng Nhập\"\r\n                    >\r\n                        {loading && <div className=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\" />}\r\n                        <FormattedMessage id=\"register\" />\r\n\r\n\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n\r\n        <p>\r\n            Bạn cần đăng kí ? <Link to=\"/sing-up\" >Đăng kí.</Link>\r\n        </p>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default LoginFormV2;\r\n","D:\\PowerGate\\Validate-useform\\src\\utils\\index.ts",[],["136","137"],"D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\components\\SingupForm.tsx",["138","139","140","141","142","143","144","145"],"D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\components\\LoginForm.tsx",[],["146","147"],"D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\utils.ts",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\pages\\SingupPage.tsx",["148","149"],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":14,"column":8,"nodeType":"156","messageId":"157","endLine":14,"endColumn":13},{"ruleId":"154","severity":1,"message":"158","line":7,"column":9,"nodeType":"156","messageId":"157","endLine":7,"endColumn":17},{"ruleId":"154","severity":1,"message":"159","line":6,"column":8,"nodeType":"156","messageId":"157","endLine":6,"endColumn":19},{"ruleId":"154","severity":1,"message":"160","line":6,"column":23,"nodeType":"156","messageId":"157","endLine":6,"endColumn":32},{"ruleId":"154","severity":1,"message":"161","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":14},{"ruleId":"154","severity":1,"message":"162","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":17},{"ruleId":"154","severity":1,"message":"163","line":20,"column":10,"nodeType":"156","messageId":"157","endLine":20,"endColumn":33},{"ruleId":"154","severity":1,"message":"164","line":21,"column":10,"nodeType":"156","messageId":"157","endLine":21,"endColumn":25},{"ruleId":"154","severity":1,"message":"165","line":21,"column":27,"nodeType":"156","messageId":"157","endLine":21,"endColumn":38},{"ruleId":"154","severity":1,"message":"166","line":25,"column":10,"nodeType":"156","messageId":"157","endLine":25,"endColumn":17},{"ruleId":"154","severity":1,"message":"167","line":26,"column":10,"nodeType":"156","messageId":"157","endLine":26,"endColumn":22},{"ruleId":"154","severity":1,"message":"168","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"169","line":2,"column":31,"nodeType":"156","messageId":"157","endLine":2,"endColumn":44},{"ruleId":"154","severity":1,"message":"155","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":13},{"ruleId":"154","severity":1,"message":"170","line":4,"column":17,"nodeType":"156","messageId":"157","endLine":4,"endColumn":24},{"ruleId":"154","severity":1,"message":"171","line":5,"column":24,"nodeType":"156","messageId":"157","endLine":5,"endColumn":40},{"ruleId":"154","severity":1,"message":"172","line":16,"column":31,"nodeType":"156","messageId":"157","endLine":16,"endColumn":43},{"ruleId":"173","severity":1,"message":"174","line":31,"column":8,"nodeType":"175","endLine":31,"endColumn":20,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":47,"column":39,"nodeType":"179","messageId":"180","endLine":47,"endColumn":40,"suggestions":"181"},{"ruleId":"177","severity":1,"message":"178","line":47,"column":55,"nodeType":"179","messageId":"180","endLine":47,"endColumn":56,"suggestions":"182"},{"ruleId":"150","replacedBy":"183"},{"ruleId":"152","replacedBy":"184"},{"ruleId":"154","severity":1,"message":"168","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"169","line":2,"column":31,"nodeType":"156","messageId":"157","endLine":2,"endColumn":44},{"ruleId":"154","severity":1,"message":"170","line":4,"column":17,"nodeType":"156","messageId":"157","endLine":4,"endColumn":24},{"ruleId":"154","severity":1,"message":"185","line":5,"column":42,"nodeType":"156","messageId":"157","endLine":5,"endColumn":59},{"ruleId":"154","severity":1,"message":"186","line":7,"column":10,"nodeType":"156","messageId":"157","endLine":7,"endColumn":16},{"ruleId":"154","severity":1,"message":"187","line":53,"column":14,"nodeType":"156","messageId":"157","endLine":53,"endColumn":26},{"ruleId":"177","severity":1,"message":"178","line":93,"column":43,"nodeType":"179","messageId":"180","endLine":93,"endColumn":44,"suggestions":"188"},{"ruleId":"177","severity":1,"message":"178","line":93,"column":59,"nodeType":"179","messageId":"180","endLine":93,"endColumn":60,"suggestions":"189"},{"ruleId":"150","replacedBy":"190"},{"ruleId":"152","replacedBy":"191"},{"ruleId":"154","severity":1,"message":"163","line":14,"column":10,"nodeType":"156","messageId":"157","endLine":14,"endColumn":33},{"ruleId":"173","severity":1,"message":"192","line":42,"column":8,"nodeType":"175","endLine":42,"endColumn":10,"suggestions":"193"},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"@typescript-eslint/no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'language' is assigned a value but never used.","'intlReducer' is defined but never used.","'IntlState' is defined but never used.","'fork' is defined but never used.","'LoginForm' is defined but never used.","'getErrorMessageResponse' is defined but never used.","'mapStateToProps' is defined but never used.","'getMessages' is defined but never used.","'connect' is defined but never used.","'IntlProvider' is defined but never used.","'useEffect' is defined but never used.","'SubmitHandler' is defined but never used.","'Toaster' is defined but never used.","'ILoginValidation' is defined but never used.","'errorMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'onLogin'. Either include it or remove the dependency array.","ArrayExpression",["196"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["197","198"],["199","200"],["194"],["195"],"'ISignUpValidation' is defined but never used.","'values' is defined but never used.","'toastMessage' is defined but never used.",["201","202"],["203","204"],["194"],["195"],"React Hook React.useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["205"],"no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"messageId":"208","fix":"209","desc":"210"},{"messageId":"211","fix":"212","desc":"213"},{"messageId":"208","fix":"214","desc":"210"},{"messageId":"211","fix":"215","desc":"213"},{"messageId":"208","fix":"216","desc":"210"},{"messageId":"211","fix":"217","desc":"213"},{"messageId":"208","fix":"218","desc":"210"},{"messageId":"211","fix":"219","desc":"213"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [formValues, onLogin]",{"range":"222","text":"223"},"removeEscape",{"range":"224","text":"225"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"226","text":"227"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"228","text":"225"},{"range":"229","text":"227"},{"range":"230","text":"225"},{"range":"231","text":"227"},{"range":"232","text":"225"},{"range":"233","text":"227"},"Update the dependencies array to be: [dispatch]",{"range":"234","text":"235"},[961,973],"[formValues, onLogin]",[1407,1408],"",[1407,1407],"\\",[1423,1424],[1423,1423],[2785,2786],[2785,2785],[2801,2802],[2801,2801],[1741,1743],"[dispatch]"]