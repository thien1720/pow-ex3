[{"D:\\PowerGate\\Validate-useform\\src\\index.tsx":"1","D:\\PowerGate\\Validate-useform\\src\\reportWebVitals.ts":"2","D:\\PowerGate\\Validate-useform\\src\\redux\\configureStore.ts":"3","D:\\PowerGate\\Validate-useform\\src\\App.tsx":"4","D:\\PowerGate\\Validate-useform\\src\\modules\\intl\\redux\\intlReducer.ts":"5","D:\\PowerGate\\Validate-useform\\src\\modules\\intl\\component\\ConnectedIntlProvider.tsx":"6","D:\\PowerGate\\Validate-useform\\src\\redux\\reducer.ts":"7","D:\\PowerGate\\Validate-useform\\src\\redux\\sagas.ts":"8","D:\\PowerGate\\Validate-useform\\src\\utils\\constants.ts":"9","D:\\PowerGate\\Validate-useform\\src\\utils\\httpResponseCode.ts":"10","D:\\PowerGate\\Validate-useform\\src\\configs\\api.ts":"11","D:\\PowerGate\\Validate-useform\\src\\modules\\intl\\constants.ts":"12","D:\\PowerGate\\Validate-useform\\src\\Routes.tsx":"13","D:\\PowerGate\\Validate-useform\\src\\modules\\common\\redux\\thunk.ts":"14","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\redux\\authReducer.ts":"15","D:\\PowerGate\\Validate-useform\\src\\configs\\routes.ts":"16","D:\\PowerGate\\Validate-useform\\src\\modules\\common\\components\\ProtectedRoute.tsx":"17","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\pages\\LoginPage.tsx":"18","D:\\PowerGate\\Validate-useform\\src\\modules\\home\\pages\\HomePage.tsx":"19","D:\\PowerGate\\Validate-useform\\src\\modules\\home\\pages\\ContactPage.tsx":"20","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\components\\LoginFormV2.tsx":"21","D:\\PowerGate\\Validate-useform\\src\\utils\\index.ts":"22","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\components\\SingupForm.tsx":"23","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\components\\LoginForm.tsx":"24","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\utils.ts":"25","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\pages\\SingupPage.tsx":"26"},{"size":1305,"mtime":1681437024000,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1681437024000,"results":"29","hashOfConfig":"28"},{"size":1325,"mtime":1681437024000,"results":"30","hashOfConfig":"28"},{"size":1279,"mtime":1681437024000,"results":"31","hashOfConfig":"28"},{"size":773,"mtime":1681807982485,"results":"32","hashOfConfig":"28"},{"size":794,"mtime":1681807026453,"results":"33","hashOfConfig":"28"},{"size":575,"mtime":1681437024000,"results":"34","hashOfConfig":"28"},{"size":143,"mtime":1681437024000,"results":"35","hashOfConfig":"28"},{"size":212,"mtime":1681438176000,"results":"36","hashOfConfig":"28"},{"size":93,"mtime":1681437024000,"results":"37","hashOfConfig":"28"},{"size":783,"mtime":1681729918035,"results":"38","hashOfConfig":"28"},{"size":230,"mtime":1681741587861,"results":"39","hashOfConfig":"28"},{"size":1044,"mtime":1681733876977,"results":"40","hashOfConfig":"28"},{"size":1192,"mtime":1681438176000,"results":"41","hashOfConfig":"28"},{"size":807,"mtime":1681438176000,"results":"42","hashOfConfig":"28"},{"size":108,"mtime":1681707470678,"results":"43","hashOfConfig":"28"},{"size":570,"mtime":1681437024000,"results":"44","hashOfConfig":"28"},{"size":3913,"mtime":1681809336509,"results":"45","hashOfConfig":"28"},{"size":144,"mtime":1681437024000,"results":"46","hashOfConfig":"28"},{"size":153,"mtime":1681437024000,"results":"47","hashOfConfig":"28"},{"size":5957,"mtime":1681808924895,"results":"48","hashOfConfig":"28"},{"size":551,"mtime":1681565380445,"results":"49","hashOfConfig":"28"},{"size":15769,"mtime":1681791925717,"results":"50","hashOfConfig":"28"},{"size":3456,"mtime":1681564426269,"results":"51","hashOfConfig":"28"},{"size":770,"mtime":1681437024000,"results":"52","hashOfConfig":"28"},{"size":4192,"mtime":1681809310518,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1kvtffa",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\PowerGate\\Validate-useform\\src\\index.tsx",[],["111","112"],"D:\\PowerGate\\Validate-useform\\src\\reportWebVitals.ts",[],"D:\\PowerGate\\Validate-useform\\src\\redux\\configureStore.ts",[],"D:\\PowerGate\\Validate-useform\\src\\App.tsx",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\intl\\redux\\intlReducer.ts",["113"],"D:\\PowerGate\\Validate-useform\\src\\modules\\intl\\component\\ConnectedIntlProvider.tsx",["114","115"],"import { IntlProvider } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../../redux/reducer';\nimport enMessages from '../en.json';\nimport viMessages from '../vi.json';\nimport intlReducer, { IntlState } from '../../../modules/intl/redux/intlReducer';\n\n\nfunction getMessages(locale: string): any {\n  console.log(locale)\n  if (typeof locale === 'string' && locale.startsWith('vi')) {\n    console.log(\"vi\")\n\n    return viMessages;\n  }\n  return enMessages;\n}\n// getMessages(\"\")\n\nfunction mapStateToProps(state : AppState) {\n  console.log(state);\n  return {\n    locale: state.intl.locale,\n    messages: getMessages(state.intl.locale),\n  };\n}\n\n// mapStateToProps( )\n\n\nexport {getMessages, mapStateToProps}\n\nexport default connect(mapStateToProps)(IntlProvider);\n","D:\\PowerGate\\Validate-useform\\src\\redux\\reducer.ts",[],"D:\\PowerGate\\Validate-useform\\src\\redux\\sagas.ts",["116"],"import { fork } from '@redux-saga/core/effects';\n\nexport default function* rootSaga() {\n  // we need add saga here\n  //yield fork(someSaga);\n}\n","D:\\PowerGate\\Validate-useform\\src\\utils\\constants.ts",[],"D:\\PowerGate\\Validate-useform\\src\\utils\\httpResponseCode.ts",[],"D:\\PowerGate\\Validate-useform\\src\\configs\\api.ts",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\intl\\constants.ts",[],"D:\\PowerGate\\Validate-useform\\src\\Routes.tsx",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\common\\redux\\thunk.ts",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\redux\\authReducer.ts",[],"D:\\PowerGate\\Validate-useform\\src\\configs\\routes.ts",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\common\\components\\ProtectedRoute.tsx",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\pages\\LoginPage.tsx",["117","118","119","120","121","122"],"D:\\PowerGate\\Validate-useform\\src\\modules\\home\\pages\\HomePage.tsx",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\home\\pages\\ContactPage.tsx",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\components\\LoginFormV2.tsx",["123","124","125","126","127","128","129","130","131"],"D:\\PowerGate\\Validate-useform\\src\\utils\\index.ts",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\components\\SingupForm.tsx",["132","133","134","135","136","137","138","139"],"import React, { useEffect, useState } from 'react';\r\nimport { useForm, Controller, SubmitHandler } from \"react-hook-form\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { ISignUpParams, ILocationParams, ISignUpValidation } from '../../../models/auth';\r\nimport { GENDER } from \"../../intl/constants\"\r\nimport { values } from 'lodash';\r\n\r\ninterface Props {\r\n    onSignUp(values: ISignUpParams): void;\r\n    loading: boolean;\r\n    errorMessage: string;\r\n    locations: Array<ILocationParams>;\r\n    states: Array<ILocationParams>;\r\n    onChangeRegion(idRegion: string): void;\r\n}\r\n\r\n\r\nconst SingupForm = (props: Props) => {\r\n    const { onSignUp, loading, errorMessage, locations, states, onChangeRegion } = props;\r\n    // console.log(states)\r\n    // console.log(locations)\r\n    \r\n    const { control, handleSubmit } = useForm({\r\n        defaultValues: {\r\n            email: '',\r\n            password: '',\r\n            repeatPassword: '',\r\n            name: '',\r\n            gender: '',\r\n            region: '',\r\n            state: '',\r\n        }\r\n    });\r\n    const [formValues, setFormValues] = React.useState<ISignUpParams>({\r\n        email: '',\r\n        password: '',\r\n        repeatPassword: '',\r\n        name: '',\r\n        gender: '',\r\n        region: '',\r\n        state: '',\r\n    });\r\n    // const [validate, setValidate] = React.useState<ISignUpValidation>();\r\n    const [reatPass, setReatPass] = useState<string>(\"\")\r\n\r\n    const onSubmit = React.useCallback(() => {\r\n        // setValidate(validate);\r\n        onSignUp(formValues);\r\n        console.log(\"thien\")\r\n    }, [formValues, onSignUp]);\r\n\r\n    function toastMessage() {\r\n        if (errorMessage.trim() === \"Login succes\") {\r\n            toast.success(\"Login sucess!\", {\r\n                duration: 2000,\r\n            })\r\n\r\n        } else {\r\n            toast.error(\"Invalid username / password\", {\r\n                duration: 1000,\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    // console.log(formValues)\r\n    return (\r\n        <div\r\n            className=\"container\"\r\n            style={{\r\n                height: '100vh',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                flexDirection: 'column',\r\n            }}\r\n        >\r\n\r\n\r\n            <form\r\n                onSubmit={handleSubmit(onSubmit)}\r\n                style={{ maxWidth: '560px', width: '100%' }}\r\n                className=\"row g-3 needs-validation\"\r\n            >\r\n\r\n                <Controller\r\n                    name=\"email\"\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    rules={{\r\n                        pattern: {\r\n                            value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                            message: \"Value is not email\"\r\n                        },\r\n                        required: \"This email is required.\",\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n                                <FormattedMessage id=\"email\" />\r\n                            </label>\r\n                            <input\r\n                                {...field}\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                className=\"form-control\"\r\n                                id=\"inputEmail\"\r\n                                onChange={(e) => {\r\n                                    field.onChange(e);\r\n                                    setFormValues({ ...formValues, email: e.target.value })\r\n                                }}\r\n                            />\r\n                            {error && <small className=\"text-danger\">\r\n                                {error.message}\r\n                            </small>}\r\n                        </div>\r\n                    )}\r\n                />\r\n\r\n                <Controller\r\n                    name=\"password\"\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    rules={{\r\n                        minLength: {\r\n                            value: 6,\r\n                            message: \"This input must exceed 6 characters\"\r\n                        },\r\n                        required: \"This password is required.\",\r\n\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                                <FormattedMessage id=\"password\" />\r\n                            </label>\r\n                            <input {...field}\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                onChange={(e) => {\r\n                                    // console.log(e)\r\n                                    field.onChange(e);\r\n                                    setFormValues({ ...formValues, password: e.target.value })\r\n                                }}\r\n                            />\r\n                            {\r\n\r\n                                error && <small className=\"text-danger\">\r\n                                    {error?.message}</small>\r\n                            }\r\n\r\n                        </div>\r\n                    )}\r\n                />\r\n\r\n                {/* repeat password */}\r\n                <Controller\r\n                    name=\"repeatPassword\"\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    rules={{\r\n                        minLength: {\r\n                            value: 6,\r\n                            message: \"This input must exceed 6 characters\"\r\n                        },\r\n                        required: \"This repeat password is required.\",\r\n                        validate: (val: string) => {\r\n                     \r\n                            if (val !== formValues.password) {\r\n                                return \"Your passwords do no match\";\r\n                            }\r\n                        },\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                                <FormattedMessage id=\"Xác nhập lại mật khẩu\" />\r\n                            </label>\r\n                            <input {...field}\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                onChange={(e) => {\r\n                                    // console.log(e)\r\n                                    if (e.target.value !== formValues.password) {\r\n                                        // console.log(e.target.value)\r\n                                        // console.log()\r\n\r\n                                        setReatPass(\"Your passwords do no match\")\r\n                                        // return\r\n                                        setFormValues({ ...formValues, repeatPassword: e.target.value })\r\n\r\n                                    } else {\r\n                                        console.log(formValues.password)\r\n                                        setReatPass(\"\")\r\n                                        setFormValues({ ...formValues, repeatPassword: e.target.value })\r\n\r\n                                    }\r\n                                    console.log(\"skfjdk\")\r\n                                    field.onChange(e);\r\n                                    // setFormValues({ ...formValues, repeatPassword: e.target.value })\r\n                                }}\r\n                            />\r\n                            {\r\n                                reatPass\r\n                                    ? <small className=\"text-danger\">\r\n                                        {reatPass}</small>\r\n                                    : error && <small className=\"text-danger\">\r\n                                        {error?.message}</small>\r\n                            }\r\n                        </div>\r\n                    )}\r\n                />\r\n                {/* Họ và Tên */}\r\n                <Controller\r\n                    name=\"name\"\r\n                    control={control}\r\n                    rules={{\r\n                        required: \"This fullname is required.\",\r\n\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                                <FormattedMessage id=\"name\" />\r\n                            </label>\r\n                            <input {...field}\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                onChange={(e) => {\r\n                                    // console.log(\"name\", e.target.value)\r\n                                    field.onChange(e);\r\n                                    setFormValues({ ...formValues, name: e.target.value })\r\n                                }}\r\n                            />\r\n                            {error && <small className=\"text-danger\">\r\n                                {error?.message}</small>}\r\n                        </div>\r\n                    )}\r\n                />\r\n                {/* Giới Tính */}\r\n                <Controller\r\n                    name=\"gender\"\r\n                    control={control}\r\n                    rules={{\r\n                        required: \"This gender is required.\",\r\n\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                                <FormattedMessage id=\"gender\" />\r\n                            </label>\r\n                            <select\r\n                                onChange={(e) => {\r\n                                    // console.log(\"gender\",e.target.value)\r\n                                    field.onChange(e);\r\n                                    setFormValues({ ...formValues, gender: e.target.value })\r\n                                }}\r\n                                className=\"form-select\"\r\n                                aria-label=\"Default select example\">\r\n                                <option selected>--select an option--</option>\r\n                                {GENDER.map((gen) => {\r\n                                    return <option key={gen.label}>{gen.value}</option>\r\n                                })}\r\n                            </select>\r\n                            {error && <small className=\"text-danger\">\r\n                                {error?.message}</small>}\r\n                        </div>\r\n                    )}\r\n                />\r\n\r\n                {/* QUốc gia */}\r\n                <Controller\r\n                    name=\"region\"\r\n                    control={control}\r\n                    rules={{\r\n                        required: \"This region is required.\",\r\n\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                                <FormattedMessage id=\"region\" />\r\n                            </label>\r\n                            <select\r\n                                onChange={(e) => {\r\n                                    let nameRegion = e.target.value\r\n                                    // console.log( \"region\", typeof nameRegion);\r\n                                    onChangeRegion(e.target.value)\r\n                                    field.onChange(e);\r\n                                    setFormValues({ ...formValues, region: nameRegion  })\r\n                                }}\r\n                                className=\"form-select\"\r\n                                name=\"region\"\r\n                                aria-label=\"Default select example\">\r\n                                <option selected>--select an option--</option>\r\n                                {locations.map((ci) => {\r\n                                    return <option key={ci.id} value={ci.id} name-id={ci.name}>{ci.name}</option>\r\n                                })}\r\n                            </select>\r\n                            {error && <small className=\"text-danger\">\r\n                                {error?.message}</small>}\r\n                        </div>\r\n                    )}\r\n                />\r\n\r\n                {/* Thành Phố */}\r\n                <Controller\r\n                    name=\"state\"\r\n                    control={control}\r\n                    rules={{\r\n                        required: \"This city is required.\",\r\n\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                                <FormattedMessage id=\"Thành Phố\" />\r\n                            </label>\r\n                            <select\r\n                                onChange={(e) => {\r\n                                    console.log(\"state\", e.target.value)\r\n                                    field.onChange(e);\r\n                                    setFormValues({ ...formValues, state: e.target.value })\r\n                                }}\r\n                                className=\"form-select\"\r\n                                aria-label=\"Default select example\"\r\n                            >\r\n                                <option selected>--select an option--</option>\r\n                                {states.map((ci) => {\r\n                                    return <option key={ci.id} value={ci.id}>{ci.name}</option>\r\n                                })}\r\n                            </select>\r\n                            {error && <small className=\"text-danger\">\r\n                                {error?.message}</small>}\r\n                        </div>\r\n                    )}\r\n                />\r\n\r\n\r\n\r\n                <div className=\"row justify-content-md-center\" style={{ margin: '16px 0' }}>\r\n                    <div className=\"col-md-auto\" style={{ position: \"relative\" }}>\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            type=\"submit\"\r\n                            style={{ minWidth: '160px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                            disabled={loading}\r\n                            value=\"Đăng Nhập\"\r\n                        >\r\n                            {loading && <div className=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\" />}\r\n                            <FormattedMessage id=\"register\" />\r\n\r\n\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form >\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default SingupForm;\r\n","D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\components\\LoginForm.tsx",[],["140","141"],"D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\utils.ts",[],"D:\\PowerGate\\Validate-useform\\src\\modules\\auth\\pages\\SingupPage.tsx",["142","143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":7,"column":9,"nodeType":"150","messageId":"151","endLine":7,"endColumn":17},{"ruleId":"148","severity":1,"message":"152","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":19},{"ruleId":"148","severity":1,"message":"153","line":6,"column":23,"nodeType":"150","messageId":"151","endLine":6,"endColumn":32},{"ruleId":"148","severity":1,"message":"154","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":14},{"ruleId":"148","severity":1,"message":"155","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":17},{"ruleId":"148","severity":1,"message":"156","line":20,"column":10,"nodeType":"150","messageId":"151","endLine":20,"endColumn":33},{"ruleId":"148","severity":1,"message":"157","line":21,"column":10,"nodeType":"150","messageId":"151","endLine":21,"endColumn":25},{"ruleId":"148","severity":1,"message":"158","line":21,"column":27,"nodeType":"150","messageId":"151","endLine":21,"endColumn":38},{"ruleId":"148","severity":1,"message":"159","line":25,"column":10,"nodeType":"150","messageId":"151","endLine":25,"endColumn":17},{"ruleId":"148","severity":1,"message":"160","line":26,"column":10,"nodeType":"150","messageId":"151","endLine":26,"endColumn":22},{"ruleId":"148","severity":1,"message":"161","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"162","line":2,"column":31,"nodeType":"150","messageId":"151","endLine":2,"endColumn":44},{"ruleId":"148","severity":1,"message":"163","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":13},{"ruleId":"148","severity":1,"message":"164","line":4,"column":17,"nodeType":"150","messageId":"151","endLine":4,"endColumn":24},{"ruleId":"148","severity":1,"message":"165","line":5,"column":24,"nodeType":"150","messageId":"151","endLine":5,"endColumn":40},{"ruleId":"148","severity":1,"message":"166","line":16,"column":31,"nodeType":"150","messageId":"151","endLine":16,"endColumn":43},{"ruleId":"167","severity":1,"message":"168","line":31,"column":8,"nodeType":"169","endLine":31,"endColumn":20,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":47,"column":39,"nodeType":"173","messageId":"174","endLine":47,"endColumn":40,"suggestions":"175"},{"ruleId":"171","severity":1,"message":"172","line":47,"column":55,"nodeType":"173","messageId":"174","endLine":47,"endColumn":56,"suggestions":"176"},{"ruleId":"148","severity":1,"message":"161","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"162","line":2,"column":31,"nodeType":"150","messageId":"151","endLine":2,"endColumn":44},{"ruleId":"148","severity":1,"message":"164","line":4,"column":17,"nodeType":"150","messageId":"151","endLine":4,"endColumn":24},{"ruleId":"148","severity":1,"message":"177","line":5,"column":42,"nodeType":"150","messageId":"151","endLine":5,"endColumn":59},{"ruleId":"148","severity":1,"message":"178","line":7,"column":10,"nodeType":"150","messageId":"151","endLine":7,"endColumn":16},{"ruleId":"148","severity":1,"message":"179","line":53,"column":14,"nodeType":"150","messageId":"151","endLine":53,"endColumn":26},{"ruleId":"171","severity":1,"message":"172","line":93,"column":43,"nodeType":"173","messageId":"174","endLine":93,"endColumn":44,"suggestions":"180"},{"ruleId":"171","severity":1,"message":"172","line":93,"column":59,"nodeType":"173","messageId":"174","endLine":93,"endColumn":60,"suggestions":"181"},{"ruleId":"144","replacedBy":"182"},{"ruleId":"146","replacedBy":"183"},{"ruleId":"148","severity":1,"message":"156","line":14,"column":10,"nodeType":"150","messageId":"151","endLine":14,"endColumn":33},{"ruleId":"167","severity":1,"message":"184","line":42,"column":8,"nodeType":"169","endLine":42,"endColumn":10,"suggestions":"185"},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"@typescript-eslint/no-unused-vars","'language' is assigned a value but never used.","Identifier","unusedVar","'intlReducer' is defined but never used.","'IntlState' is defined but never used.","'fork' is defined but never used.","'LoginForm' is defined but never used.","'getErrorMessageResponse' is defined but never used.","'mapStateToProps' is defined but never used.","'getMessages' is defined but never used.","'connect' is defined but never used.","'IntlProvider' is defined but never used.","'useEffect' is defined but never used.","'SubmitHandler' is defined but never used.","'toast' is defined but never used.","'Toaster' is defined but never used.","'ILoginValidation' is defined but never used.","'errorMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'onLogin'. Either include it or remove the dependency array.","ArrayExpression",["188"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["189","190"],["191","192"],"'ISignUpValidation' is defined but never used.","'values' is defined but never used.","'toastMessage' is defined but never used.",["193","194"],["195","196"],["186"],["187"],"React Hook React.useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["197"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"messageId":"200","fix":"201","desc":"202"},{"messageId":"203","fix":"204","desc":"205"},{"messageId":"200","fix":"206","desc":"202"},{"messageId":"203","fix":"207","desc":"205"},{"messageId":"200","fix":"208","desc":"202"},{"messageId":"203","fix":"209","desc":"205"},{"messageId":"200","fix":"210","desc":"202"},{"messageId":"203","fix":"211","desc":"205"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [formValues, onLogin]",{"range":"214","text":"215"},"removeEscape",{"range":"216","text":"217"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"218","text":"219"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"220","text":"217"},{"range":"221","text":"219"},{"range":"222","text":"217"},{"range":"223","text":"219"},{"range":"224","text":"217"},{"range":"225","text":"219"},"Update the dependencies array to be: [dispatch]",{"range":"226","text":"227"},[961,973],"[formValues, onLogin]",[1407,1408],"",[1407,1407],"\\",[1423,1424],[1423,1423],[2782,2783],[2782,2782],[2798,2799],[2798,2798],[1741,1743],"[dispatch]"]