{"ast":null,"code":"import { createCustomAction, getType } from 'typesafe-actions';\nimport { LS_LANG } from '../constants';\nconst language = localStorage.setItem(LS_LANG, locale);\nexport const setLocale = locale => {\n  localStorage.setItem(LS_LANG, locale);\n  return setLocaleAction(locale);\n};\nexport const setLocaleAction = createCustomAction('setLocale', locale => ({\n  locale\n}));\nconst actions = {\n  setLocale\n};\nexport default function reducer(state = {\n  locale: 'vi'\n}, action) {\n  switch (action.type) {\n    case getType(setLocaleAction):\n      return { ...state,\n        locale: action.locale\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/PowerGate/Validate-useform/src/modules/intl/redux/intlReducer.ts"],"names":["createCustomAction","getType","LS_LANG","language","localStorage","setItem","locale","setLocale","setLocaleAction","actions","reducer","state","action","type"],"mappings":"AAAA,SAAqBA,kBAArB,EAAyCC,OAAzC,QAAwD,kBAAxD;AACA,SAASC,OAAT,QAAwB,cAAxB;AAKE,MAAMC,QAAQ,GAAIC,YAAY,CAACC,OAAb,CAAqBH,OAArB,EAA8BI,MAA9B,CAAlB;AAEF,OAAO,MAAMC,SAAS,GAAID,MAAD,IAAoB;AAC3CF,EAAAA,YAAY,CAACC,OAAb,CAAqBH,OAArB,EAA8BI,MAA9B;AACA,SAAOE,eAAe,CAACF,MAAD,CAAtB;AACD,CAHM;AAKP,OAAO,MAAME,eAAe,GAAGR,kBAAkB,CAAC,WAAD,EAAeM,MAAD,KAAqB;AAClFA,EAAAA;AADkF,CAArB,CAAd,CAA1C;AAIP,MAAMG,OAAO,GAAG;AAAEF,EAAAA;AAAF,CAAhB;AAIA,eAAe,SAASG,OAAT,CACbC,KAAgB,GAAG;AAAEL,EAAAA,MAAM,EAAE;AAAV,CADN,EAEbM,MAFa,EAGb;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,OAAO,CAACO,eAAD,CAAZ;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYL,QAAAA,MAAM,EAAEM,MAAM,CAACN;AAA3B,OAAP;;AACF;AACE,aAAOK,KAAP;AAJJ;AAMD","sourcesContent":["import { ActionType, createCustomAction, getType } from 'typesafe-actions';\nimport { LS_LANG } from '../constants';\n\nexport interface IntlState {\n  readonly locale: string;\n}\n  const language =  localStorage.setItem(LS_LANG, locale);\n\nexport const setLocale = (locale: string) => {\n  localStorage.setItem(LS_LANG, locale);\n  return setLocaleAction(locale);\n};\n\nexport const setLocaleAction = createCustomAction('setLocale', (locale: string) => ({\n  locale,\n}));\n\nconst actions = { setLocale };\n\ntype Action = ActionType<typeof actions>;\n\nexport default function reducer(\n  state: IntlState = { locale: 'vi' },\n  action: Action,\n) {\n  switch (action.type) {\n    case getType(setLocaleAction):\n      return { ...state, locale: action.locale };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}