{"ast":null,"code":"import { createCustomAction, getType } from 'typesafe-actions';\nexport const setAuthorization = createCustomAction('auth/setAuthorization', data => ({\n  data\n}));\nexport const setUserInfo = createCustomAction('auth/setUserInfo', data => ({\n  data\n}));\nconst actions = {\n  setAuthorization,\n  setUserInfo\n};\nexport default function reducer(state = {}, action) {\n  switch (action.type) {\n    case getType(setAuthorization):\n      return { ...state,\n        auth: action.data\n      };\n\n    case getType(setUserInfo):\n      return { ...state,\n        user: action.data\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/PowerGate/Validate-useform/src/modules/auth/redux/authReducer.ts"],"names":["createCustomAction","getType","setAuthorization","data","setUserInfo","actions","reducer","state","action","type","auth","user"],"mappings":"AAAA,SAAqBA,kBAArB,EAAyCC,OAAzC,QAAwD,kBAAxD;AAQA,OAAO,MAAMC,gBAAgB,GAAGF,kBAAkB,CAAC,uBAAD,EAA2BG,IAAD,KAAsB;AAChGA,EAAAA;AADgG,CAAtB,CAA1B,CAA3C;AAIP,OAAO,MAAMC,WAAW,GAAGJ,kBAAkB,CAAC,kBAAD,EAAsBG,IAAD,KAAkB;AAClFA,EAAAA;AADkF,CAAlB,CAArB,CAAtC;AAIP,MAAME,OAAO,GAAG;AAAEH,EAAAA,gBAAF;AAAoBE,EAAAA;AAApB,CAAhB;AAIA,eAAe,SAASE,OAAT,CAAiBC,KAAgB,GAAG,EAApC,EAAwCC,MAAxC,EAAwD;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,OAAO,CAACC,gBAAD,CAAZ;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYG,QAAAA,IAAI,EAAEF,MAAM,CAACL;AAAzB,OAAP;;AACF,SAAKF,OAAO,CAACG,WAAD,CAAZ;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYI,QAAAA,IAAI,EAAEH,MAAM,CAACL;AAAzB,OAAP;;AACF;AACE,aAAOI,KAAP;AANJ;AAQD","sourcesContent":["import { ActionType, createCustomAction, getType } from 'typesafe-actions';\nimport { AuthToken, IUser } from '../../../models/user';\n\nexport interface AuthState {\n  auth?: AuthToken;\n  user?: IUser;\n}\n\nexport const setAuthorization = createCustomAction('auth/setAuthorization', (data: AuthToken) => ({\n  data,\n}));\n\nexport const setUserInfo = createCustomAction('auth/setUserInfo', (data: IUser) => ({\n  data,\n}));\n\nconst actions = { setAuthorization, setUserInfo };\n\ntype Action = ActionType<typeof actions>;\n\nexport default function reducer(state: AuthState = {}, action: Action) {\n  switch (action.type) {\n    case getType(setAuthorization):\n      return { ...state, auth: action.data };\n    case getType(setUserInfo):\n      return { ...state, user: action.data };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}