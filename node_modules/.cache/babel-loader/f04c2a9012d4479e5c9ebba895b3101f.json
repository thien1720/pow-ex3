{"ast":null,"code":"import { IntlProvider } from 'react-intl';\nimport { connect } from 'react-redux';\n\nfunction getMessages(locale) {\n  console.log(typeof locale);\n  console.log(locale.includes(\"vi\")); // if (locale.includes('vi')) {\n  //   return viMessages;\n  // }\n  // return enMessages;\n} // getMessages(\"\")\n// function mapStateToProps(state: AppState) {\n//   return {\n//     locale: state.intl.locale,\n//     messages: getMessages(state.intl.locale),\n//   };\n// }\n\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  return {\n    locale: state,\n    messages: getMessages(state)\n  };\n}\n\nexport { getMessages, mapStateToProps };\nexport default connect(mapStateToProps)(IntlProvider);","map":{"version":3,"sources":["D:/PowerGate/Validate-useform/src/modules/intl/component/ConnectedIntlProvider.tsx"],"names":["IntlProvider","connect","getMessages","locale","console","log","includes","mapStateToProps","state","messages"],"mappings":"AAAA,SAASA,YAAT,QAA6B,YAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAKA,SAASC,WAAT,CAAqBC,MAArB,EAA0C;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,MAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,QAAP,CAAgB,IAAhB,CAAZ,EAFwC,CAIxC;AACA;AACA;AACA;AACD,C,CACD;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASC,eAAT,CAAyBC,KAAzB,EAAwC;AACtCJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACE,SAAO;AACLL,IAAAA,MAAM,EAAEK,KADH;AAELC,IAAAA,QAAQ,EAAEP,WAAW,CAACM,KAAD;AAFhB,GAAP;AAID;;AAEH,SAAQN,WAAR,EAAqBK,eAArB;AAEA,eAAeN,OAAO,CAACM,eAAD,CAAP,CAAyBP,YAAzB,CAAf","sourcesContent":["import { IntlProvider } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../../redux/reducer';\nimport enMessages from '../en.json';\nimport viMessages from '../vi.json';\n\nfunction getMessages(locale: string): any {\n  console.log(typeof locale)\n  console.log(locale.includes(\"vi\"))\n\n  // if (locale.includes('vi')) {\n  //   return viMessages;\n  // }\n  // return enMessages;\n}\n// getMessages(\"\")\n\n// function mapStateToProps(state: AppState) {\n//   return {\n//     locale: state.intl.locale,\n//     messages: getMessages(state.intl.locale),\n//   };\n// }\n\n\nfunction mapStateToProps(state: string) {\n  console.log(state)\n    return {\n      locale: state,\n      messages: getMessages(state),\n    };\n  }\n\nexport {getMessages, mapStateToProps}\n\nexport default connect(mapStateToProps)(IntlProvider);\n"]},"metadata":{},"sourceType":"module"}