{"ast":null,"code":"var _jsxFileName = \"D:\\\\PowerGate\\\\Validate-useform\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { Routes } from './Routes';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from './utils/constants';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchThunk } from './modules/common/redux/thunk';\nimport { API_PATHS } from './configs/api';\nimport { RESPONSE_STATUS_SUCCESS } from './utils/httpResponseCode';\nimport { setUserInfo } from './modules/auth/redux/authReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => ({\n    user: state.profile.user\n  }));\n  const getProfile = React.useCallback(async () => {\n    const accessToken = Cookies.get(ACCESS_TOKEN_KEY);\n\n    if (accessToken && !user) {\n      const json = await dispatch(fetchThunk(API_PATHS.userProfile));\n\n      if ((json === null || json === void 0 ? void 0 : json.code) === RESPONSE_STATUS_SUCCESS) {\n        dispatch(setUserInfo({ ...json.data,\n          token: accessToken\n        }));\n      }\n    }\n  }, [dispatch, user]);\n  React.useEffect(() => {\n    getProfile();\n  }, [getProfile]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"h3CKusKrAUf/m1TOQXclDblqeKU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/PowerGate/Validate-useform/src/App.tsx"],"names":["React","Routes","Cookies","ACCESS_TOKEN_KEY","useSelector","useDispatch","fetchThunk","API_PATHS","RESPONSE_STATUS_SUCCESS","setUserInfo","App","dispatch","user","state","profile","getProfile","useCallback","accessToken","get","json","userProfile","code","data","token","useEffect"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,uBAAT,QAAwC,0BAAxC;AACA,SAASC,WAAT,QAA4B,kCAA5B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAWR,WAAW,CAAES,KAAD,KAAsB;AACjDD,IAAAA,IAAI,EAAEC,KAAK,CAACC,OAAN,CAAcF;AAD6B,GAAtB,CAAD,CAA5B;AAIA,QAAMG,UAAU,GAAGf,KAAK,CAACgB,WAAN,CAAkB,YAAY;AAC/C,UAAMC,WAAW,GAAGf,OAAO,CAACgB,GAAR,CAAYf,gBAAZ,CAApB;;AAEA,QAAIc,WAAW,IAAI,CAACL,IAApB,EAA0B;AACxB,YAAMO,IAAI,GAAG,MAAMR,QAAQ,CAACL,UAAU,CAACC,SAAS,CAACa,WAAX,CAAX,CAA3B;;AACA,UAAI,CAAAD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEE,IAAN,MAAeb,uBAAnB,EAA4C;AAC1CG,QAAAA,QAAQ,CAACF,WAAW,CAAC,EAAE,GAAGU,IAAI,CAACG,IAAV;AAAgBC,UAAAA,KAAK,EAAEN;AAAvB,SAAD,CAAZ,CAAR;AACD;AACF;AACF,GATkB,EAShB,CAACN,QAAD,EAAWC,IAAX,CATgB,CAAnB;AAWAZ,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AACpBT,IAAAA,UAAU;AACX,GAFD,EAEG,CAACA,UAAD,CAFH;AAIA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;GA1BQL,G;UACUL,W,EACAD,W;;;KAFVM,G;AA4BT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Routes } from './Routes';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from './utils/constants';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState } from './redux/reducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { fetchThunk } from './modules/common/redux/thunk';\nimport { API_PATHS } from './configs/api';\nimport { RESPONSE_STATUS_SUCCESS } from './utils/httpResponseCode';\nimport { setUserInfo } from './modules/auth/redux/authReducer';\n\nfunction App() {\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\n  const { user } = useSelector((state: AppState) => ({\n    user: state.profile.user,\n  }));\n\n  const getProfile = React.useCallback(async () => {\n    const accessToken = Cookies.get(ACCESS_TOKEN_KEY);\n\n    if (accessToken && !user) {\n      const json = await dispatch(fetchThunk(API_PATHS.userProfile));\n      if (json?.code === RESPONSE_STATUS_SUCCESS) {\n        dispatch(setUserInfo({ ...json.data, token: accessToken }));\n      }\n    }\n  }, [dispatch, user]);\n\n  React.useEffect(() => {\n    getProfile();\n  }, [getProfile]);\n\n  return (\n    <>\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}