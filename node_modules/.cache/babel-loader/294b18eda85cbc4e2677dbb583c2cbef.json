{"ast":null,"code":"import { createCustomAction, getType } from 'typesafe-actions';\nimport { LS_LANG } from '../constants';\nconst languages = localStorage.getItem(LS_LANG, locale);\nexport const setLocale = locale => {\n  localStorage.setItem(LS_LANG, locale);\n  return setLocaleAction(locale);\n};\nexport const setLocaleAction = createCustomAction('setLocale', locale => ({\n  locale\n}));\nconst actions = {\n  setLocale\n};\nexport default function reducer(state = {\n  locale: languages\n}, action) {\n  switch (action.type) {\n    case getType(setLocaleAction):\n      return { ...state,\n        locale: action.locale\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/PowerGate/Validate-useform/src/modules/intl/redux/intlReducer.ts"],"names":["createCustomAction","getType","LS_LANG","languages","localStorage","getItem","locale","setLocale","setItem","setLocaleAction","actions","reducer","state","action","type"],"mappings":"AAAA,SAAqBA,kBAArB,EAAyCC,OAAzC,QAAwD,kBAAxD;AACA,SAASC,OAAT,QAAwB,cAAxB;AAKA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBH,OAArB,EAA8BI,MAA9B,CAAlB;AAEA,OAAO,MAAMC,SAAS,GAAID,MAAD,IAAoB;AAC3CF,EAAAA,YAAY,CAACI,OAAb,CAAqBN,OAArB,EAA8BI,MAA9B;AACA,SAAOG,eAAe,CAACH,MAAD,CAAtB;AACD,CAHM;AAKP,OAAO,MAAMG,eAAe,GAAGT,kBAAkB,CAAC,WAAD,EAAeM,MAAD,KAAqB;AAClFA,EAAAA;AADkF,CAArB,CAAd,CAA1C;AAIP,MAAMI,OAAO,GAAG;AAAEH,EAAAA;AAAF,CAAhB;AAIA,eAAe,SAASI,OAAT,CACbC,KAAgB,GAAG;AAAEN,EAAAA,MAAM,EAAEH;AAAV,CADN,EAEbU,MAFa,EAGb;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,OAAO,CAACQ,eAAD,CAAZ;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYN,QAAAA,MAAM,EAAEO,MAAM,CAACP;AAA3B,OAAP;;AACF;AACE,aAAOM,KAAP;AAJJ;AAMD","sourcesContent":["import { ActionType, createCustomAction, getType } from 'typesafe-actions';\nimport { LS_LANG } from '../constants';\n\nexport interface IntlState {\n  readonly locale: string;\n}\nconst languages = localStorage.getItem(LS_LANG, locale);\n\nexport const setLocale = (locale: string) => {\n  localStorage.setItem(LS_LANG, locale);\n  return setLocaleAction(locale);\n};\n\nexport const setLocaleAction = createCustomAction('setLocale', (locale: string) => ({\n  locale,\n}));\n\nconst actions = { setLocale };\n\ntype Action = ActionType<typeof actions>;\n\nexport default function reducer(\n  state: IntlState = { locale: languages },\n  action: Action,\n) {\n  switch (action.type) {\n    case getType(setLocaleAction):\n      return { ...state, locale: action.locale };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}