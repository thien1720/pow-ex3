{"ast":null,"code":"import { IntlProvider } from 'react-intl';\nimport { connect } from 'react-redux';\nimport enMessages from '../en.json';\nimport viMessages from '../vi.json';\n\nfunction getMessages(locale) {\n  console.log(locale);\n\n  if (locale.startsWith('vi')) {\n    return viMessages;\n  }\n\n  return enMessages;\n} // getMessages(\"\")\n// function mapStateToProps(state: AppState) {\n//   return {\n//     locale: state.intl.locale,\n//     messages: getMessages(state.intl.locale),\n//   };\n// }\n\n\nfunction mapStateToProps(state) {\n  return {\n    locale: state,\n    messages: getMessages(\"en\")\n  };\n}\n\nexport { getMessages, mapStateToProps };\nexport default connect(mapStateToProps)(IntlProvider);","map":{"version":3,"sources":["D:/PowerGate/Validate-useform/src/modules/intl/component/ConnectedIntlProvider.tsx"],"names":["IntlProvider","connect","enMessages","viMessages","getMessages","locale","console","log","startsWith","mapStateToProps","state","messages"],"mappings":"AAAA,SAASA,YAAT,QAA6B,YAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA0C;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,MAAIA,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAJ,EAA6B;AAC3B,WAAOL,UAAP;AACD;;AACD,SAAOD,UAAP;AACD,C,CACD;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASO,eAAT,CAAyBC,KAAzB,EAAwC;AACpC,SAAO;AACLL,IAAAA,MAAM,EAAEK,KADH;AAELC,IAAAA,QAAQ,EAAEP,WAAW,CAAC,IAAD;AAFhB,GAAP;AAID;;AAEH,SAAQA,WAAR,EAAqBK,eAArB;AAEA,eAAeR,OAAO,CAACQ,eAAD,CAAP,CAAyBT,YAAzB,CAAf","sourcesContent":["import { IntlProvider } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../../redux/reducer';\nimport enMessages from '../en.json';\nimport viMessages from '../vi.json';\n\nfunction getMessages(locale: string): any {\n  console.log(locale)\n  if (locale.startsWith('vi')) {\n    return viMessages;\n  }\n  return enMessages;\n}\n// getMessages(\"\")\n\n// function mapStateToProps(state: AppState) {\n//   return {\n//     locale: state.intl.locale,\n//     messages: getMessages(state.intl.locale),\n//   };\n// }\n\n\nfunction mapStateToProps(state: string) {\n    return {\n      locale: state,\n      messages: getMessages(\"en\"),\n    };\n  }\n\nexport {getMessages, mapStateToProps}\n\nexport default connect(mapStateToProps)(IntlProvider);\n"]},"metadata":{},"sourceType":"module"}