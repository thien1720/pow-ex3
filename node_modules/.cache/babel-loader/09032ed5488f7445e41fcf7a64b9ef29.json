{"ast":null,"code":"import { RESPONSE_STATUS_UNAUTHORIZED } from '../../../utils/httpResponseCode';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\nimport Cookies from 'js-cookie';\nexport function fetchThunk(url, method = 'get', body, auth = true, contentType) {\n  return async (dispatch, getState) => {\n    const res = await fetch(url, {\n      credentials: 'include',\n      method,\n      body: typeof body === 'object' ? JSON.stringify(body) : body,\n      headers: contentType !== 'multipart/form-data' ? {\n        'Content-Type': contentType || 'application/json',\n        Authorization: Cookies.get(ACCESS_TOKEN_KEY) || ''\n      } : {},\n      cache: 'no-store'\n    });\n    const json = await res.json();\n\n    if (res.status === RESPONSE_STATUS_UNAUTHORIZED) {// dispatch logout, remove access token here.\n    }\n\n    return json; // throw new Error('Error');\n  };\n}","map":{"version":3,"sources":["D:/PowerGate/Validate-useform/src/modules/common/redux/thunk.ts"],"names":["RESPONSE_STATUS_UNAUTHORIZED","ACCESS_TOKEN_KEY","Cookies","fetchThunk","url","method","body","auth","contentType","dispatch","getState","res","fetch","credentials","JSON","stringify","headers","Authorization","get","cache","json","status"],"mappings":"AAGA,SAASA,4BAAT,QAA6C,iCAA7C;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,SAASC,UAAT,CACLC,GADK,EAELC,MAAyC,GAAG,KAFvC,EAGLC,IAHK,EAILC,IAAI,GAAG,IAJF,EAKLC,WALK,EAMsD;AAC3D,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACR,GAAD,EAAM;AAC3BS,MAAAA,WAAW,EAAE,SADc;AAE3BR,MAAAA,MAF2B;AAG3BC,MAAAA,IAAI,EAAE,OAAOA,IAAP,KAAgB,QAAhB,GAA2BQ,IAAI,CAACC,SAAL,CAAeT,IAAf,CAA3B,GAAkDA,IAH7B;AAI3BU,MAAAA,OAAO,EACLR,WAAW,KAAK,qBAAhB,GACI;AACE,wBAAgBA,WAAW,IAAI,kBADjC;AAEES,QAAAA,aAAa,EAAEf,OAAO,CAACgB,GAAR,CAAYjB,gBAAZ,KAAiC;AAFlD,OADJ,GAKI,EAVqB;AAW3BkB,MAAAA,KAAK,EAAE;AAXoB,KAAN,CAAvB;AAcA,UAAMC,IAAI,GAAG,MAAMT,GAAG,CAACS,IAAJ,EAAnB;;AAEA,QAAIT,GAAG,CAACU,MAAJ,KAAerB,4BAAnB,EAAiD,CAC/C;AACD;;AAED,WAAOoB,IAAP,CArBmC,CAsBnC;AACD,GAvBD;AAwBD","sourcesContent":["import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { AppState } from '../../../redux/reducer';\nimport { RESPONSE_STATUS_UNAUTHORIZED } from '../../../utils/httpResponseCode';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\nimport Cookies from 'js-cookie';\n\nexport function fetchThunk(\n  url: string,\n  method: 'get' | 'post' | 'delete' | 'put' = 'get',\n  body?: object | FormData,\n  auth = true,\n  contentType?: string,\n): ThunkAction<Promise<any>, AppState, null, Action<string>> {\n  return async (dispatch, getState) => {\n    const res = await fetch(url, {\n      credentials: 'include',\n      method,\n      body: typeof body === 'object' ? JSON.stringify(body) : body,\n      headers:\n        contentType !== 'multipart/form-data'\n          ? {\n              'Content-Type': contentType || 'application/json',\n              Authorization: Cookies.get(ACCESS_TOKEN_KEY) || '',\n            }\n          : {},\n      cache: 'no-store',\n    });\n\n    const json = await res.json();\n\n    if (res.status === RESPONSE_STATUS_UNAUTHORIZED) {\n      // dispatch logout, remove access token here.\n    }\n\n    return json;\n    // throw new Error('Error');\n  };\n}\n"]},"metadata":{},"sourceType":"module"}