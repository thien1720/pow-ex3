{"ast":null,"code":"var _jsxFileName = \"D:\\\\PowerGate\\\\Validate-useform\\\\src\\\\modules\\\\common\\\\components\\\\ProtectedRoute.tsx\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { ROUTES } from '../../../configs/routes';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = props => {\n  const { ...rest\n  } = props;\n  const auth = Cookies.get(ACCESS_TOKEN_KEY);\n\n  if (auth) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: ROUTES.login\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["D:/PowerGate/Validate-useform/src/modules/common/components/ProtectedRoute.tsx"],"names":["React","Redirect","Route","ROUTES","Cookies","ACCESS_TOKEN_KEY","ProtectedRoute","props","rest","auth","get","pathname","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAA4C,kBAA5C;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;;AAIA,MAAMC,cAAc,GAAIC,KAAD,IAAkB;AACvC,QAAM,EAAE,GAAGC;AAAL,MAAcD,KAApB;AACA,QAAME,IAAI,GAAGL,OAAO,CAACM,GAAR,CAAYL,gBAAZ,CAAb;;AAEA,MAAII,IAAJ,EAAU;AACR,wBAAO,QAAC,KAAD,OAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AACE,IAAA,EAAE,EAAE;AACFG,MAAAA,QAAQ,EAAER,MAAM,CAACS;AADf;AADN;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAfD;;KAAMN,c;AAiBN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { ROUTES } from '../../../configs/routes';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\n\ninterface Props extends RouteProps {}\n\nconst ProtectedRoute = (props: Props) => {\n  const { ...rest } = props;\n  const auth = Cookies.get(ACCESS_TOKEN_KEY);\n\n  if (auth) {\n    return <Route {...rest} />;\n  }\n\n  return (\n    <Redirect\n      to={{\n        pathname: ROUTES.login,\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}